<Window x:Class="M000.View.Personendialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:M000"
		xmlns:conv="clr-namespace:M000.Converter"
		xmlns:valid="clr-namespace:M000.Validation"
		xmlns:util="clr-namespace:M000.Util"
		xmlns:uc="clr-namespace:M000.View.UserControls"
		xmlns:model="clr-namespace:M000.Model"
		xmlns:vm="clr-namespace:M000.ViewModel"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
		
        Title="Personendialog" Height="450" Width="300"
		WindowStartupLocation="CenterScreen"
		Topmost="True"
		SizeToContent="Height"
		Style="{StaticResource GlobalWindowStyle}"
		Name="PD">
	<Window.DataContext>
		<vm:PersonendialogViewModel/>
	</Window.DataContext>
	<!--<Window.DataContext>
		<local:Person/>
	</Window.DataContext>-->
	<Window.Resources>
		<ObjectDataProvider x:Key="Odp_Colors" MethodName="GetType" ObjectType="{x:Type sys:Type}">
			<ObjectDataProvider.MethodParameters>
				<sys:String>
					System.Windows.Media.Colors, PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
				</sys:String>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider  x:Key="Odp_ColorsProperties" MethodName="GetProperties" ObjectInstance="{StaticResource Odp_Colors}"/>

		<ControlTemplate x:Key="ErrorTemp">
			<StackPanel>
				<Border BorderBrush="Red" BorderThickness="3">
					<AdornedElementPlaceholder Name="AEP"/>
				</Border>
				<Popup IsOpen="{Binding ElementName=AEP, Path=AdornedElement.IsMouseOver, Mode=OneWay}" Placement="Bottom" PopupAnimation="Slide">
					<TextBlock Text="{Binding ElementName=AEP, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Background="Red"/>
				</Popup>
			</StackPanel>
		</ControlTemplate>

		<valid:ValidationRuleCollection x:Key="TextValidations">
			<valid:LetterValidation ValidatesOnTargetUpdated="True"/>
			<valid:LengthValidation ValidatesOnTargetUpdated="True"/>
		</valid:ValidationRuleCollection>
		<valid:DateValidation x:Key="DV" ValidatesOnTargetUpdated="True"/>
		<valid:ColorValidation x:Key="CV" ValidatesOnTargetUpdated="True"/>
		<valid:AnzahlKinderValidation x:Key="AV" ValidatesOnTargetUpdated="True"/>
	</Window.Resources>
	<StackPanel Margin="5">
		<UniformGrid Margin="0">
			<TextBlock Text="Vorname: "/>
			<TextBox Text="{valid:ValidationBinding {Binding person.Vorname, UpdateSourceTrigger=PropertyChanged}, {StaticResource TextValidations}}"
					 Validation.ErrorTemplate="{StaticResource ErrorTemp}"
					 Name="VornameTB"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Nachname: "/>
			<TextBox Text="{valid:ValidationBinding {Binding person.Nachname, UpdateSourceTrigger=PropertyChanged}, {StaticResource TextValidations}}"
					 Validation.ErrorTemplate="{StaticResource ErrorTemp}"
					 Name="NachnameTB"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geburtsdatum: "/>
			<DatePicker SelectedDate="{valid:ValidationBinding {Binding person.GebDat, UpdateSourceTrigger=PropertyChanged}, {StaticResource DV}}"
						Validation.ErrorTemplate="{StaticResource ErrorTemp}"
						Name="GebDatDP"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Verheiratet: "/>
			<CheckBox IsChecked="{Binding person.Verheiratet}"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Lieblingsfarbe: "/>
			<!--<ComboBox ItemsSource="{Binding Source={StaticResource Odp_ColorsProperties}}"
					  SelectedValue="{Binding person.Lieblingsfarbe}"
					  SelectedValuePath="Name">
				<ComboBox.ItemTemplate>
					<DataTemplate DataType="Color">
						<StackPanel Orientation="Horizontal">
							<Rectangle Fill="{Binding Name}"
									   Height="20"
									   Width="20"
									   Stroke="Black"
									   StrokeThickness="2"
									   Margin="0, 0, 3, 0"/>
							<TextBlock Text="{Binding Name}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>-->
			<ComboBox ItemsSource="{util:Colors}"
					  SelectedValue="{valid:ValidationBinding {Binding person.Lieblingsfarbe, UpdateSourceTrigger=PropertyChanged}, {StaticResource CV}}"
					  Validation.ErrorTemplate="{StaticResource ErrorTemp}"
					  SelectedValuePath="Color"
					  Name="LieblingsfarbeCB">
				<ComboBox.ItemTemplate>
					<DataTemplate DataType="local:NamedColor">
						<StackPanel Orientation="Horizontal">
							<Rectangle Fill="{Binding Brush}"
									   Height="20"
									   Width="20"
									   Stroke="Black"
									   StrokeThickness="2"
									   Margin="0, 0, 3, 0"/>
							<TextBlock Text="{Binding Name}"
									   Margin="0, 0, 3, 0"/>
							<TextBlock Text="{Binding Color, StringFormat='({0})'}"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geschlecht: "/>
			<StackPanel>
				<RadioButton GroupName="Gender" Content="M" IsChecked="{Binding person.Geschlecht, Converter={util:Converter ConverterType=conv:BooleanToGeschlechtConverter}, ConverterParameter={x:Static model:Geschlecht.M}}"/>
				<RadioButton GroupName="Gender" Content="W" IsChecked="{Binding person.Geschlecht, Converter={util:Converter ConverterType=conv:BooleanToGeschlechtConverter}, ConverterParameter={x:Static model:Geschlecht.W}}"/>
				<RadioButton GroupName="Gender" Content="D" IsChecked="{Binding person.Geschlecht, Converter={util:Converter ConverterType=conv:BooleanToGeschlechtConverter}, ConverterParameter={x:Static model:Geschlecht.D}}"/>
			</StackPanel>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Anzahl Kinder: "/>
			<uc:IntegerUpDown Value="{valid:ValidationBinding {Binding person.AnzKinder, Mode=TwoWay}, {StaticResource AV}}"
							  Validation.ErrorTemplate="{StaticResource ErrorTemp}"
							  x:Name="AnzKinderIUD"/>
		</UniformGrid>
		<UniformGrid>
			<Button Content="Abbrechen" Margin="0, 0, 2.5, 0" Command="{Binding AbbrechenCommand}" CommandParameter="{Binding ElementName=PD}"/>
			<Button Content="OK" Margin="2.5, 0, 0, 0" Command="{Binding OKCommand}" CommandParameter="{Binding ElementName=PD}">
				<Button.Style>
					<Style TargetType="Button">
						<Setter Property="IsEnabled" Value="False"/>
						<Style.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding ElementName=VornameTB, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=NachnameTB, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=GebDatDP, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=LieblingsfarbeCB, Path=(Validation.HasError)}" Value="False"/>
									<Condition Binding="{Binding ElementName=AnzKinderIUD, Path=(Validation.HasError)}" Value="False"/>
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter Property="IsEnabled" Value="True"/>
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
						</Style.Triggers>
					</Style>
				</Button.Style>
			</Button>
		</UniformGrid>
	</StackPanel>

	<!--<Grid Margin="5">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="100"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<TextBlock Text="Vorname: " VerticalAlignment="Center"/>
		<TextBox Grid.Column="1"/>
		<TextBlock Text="Nachname: " VerticalAlignment="Center" Grid.Row="1"/>
		<TextBox Grid.Column="1" Grid.Row="1"/>
		<TextBlock Text="Geburtsdatum: " VerticalAlignment="Center" Grid.Row="2"/>
		<DatePicker Grid.Column="1" Grid.Row="2"/>
		<TextBlock Text="Verheiratet: " VerticalAlignment="Center" Grid.Row="3"/>
		<CheckBox Grid.Column="1" Grid.Row="3"/>
		<TextBlock Text="Lieblingsfarbe: " VerticalAlignment="Center" Grid.Row="4"/>
		<ComboBox Grid.Column="1" Grid.Row="4"/>
		<TextBlock Text="Geschlecht: " VerticalAlignment="Center" Grid.Row="5"/>
		<StackPanel Grid.Column="1" Grid.Row="5">
			<RadioButton GroupName="Gender" Content="M"/>
			<RadioButton GroupName="Gender" Content="W"/>
			<RadioButton GroupName="Gender" Content="D"/>
		</StackPanel>
		<UniformGrid Grid.Row="6" Grid.ColumnSpan="2">
			<Button Content="Abbrechen"/>
			<Button Content="OK" Grid.Column="1"/>
		</UniformGrid>
	</Grid>-->
</Window>
