<Window x:Class="M006.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:local="clr-namespace:M006"
        Title="MainWindow" Height="450" Width="800"
		WindowStartupLocation="CenterScreen"
		Topmost="True"
		FontSize="{DynamicResource GlobalFontSize}"
		DataContext="{Binding RelativeSource={RelativeSource Self}}">
	<Window.Resources>
		<local:FourValueToBrushConverter x:Key="FVBC"/>
		<SolidColorBrush Color="Aqua" x:Key="DefaultBackground"/>
		<sys:Double x:Key="GlobalFontSize">30</sys:Double>
		<!--<ResourceDictionary Source="GlobalStyles.xaml" x:Key="GS"/>-->

		<!--Styles benötigen keinen Key-->
		<!--Wenn ein Style keinen Key hat, wird dieser Style global auf alle Elemente vom entsprechenden Typen angewandt-->
		<Style TargetType="Button">
			<Setter Property="Background" Value="Black"/>
			<Setter Property="Foreground" Value="LightGreen"/>
			<!--<Setter Property="FontSize" Value="14"/>-->
			<Setter Property="FontFamily" Value="Arial"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
		</Style>

		<Style TargetType="Button" x:Key="ButtonStyle2">
			<Setter Property="Background" Value="White"/>
		</Style>
	</Window.Resources>
	<StackPanel>
		<StackPanel.Resources>
			
		</StackPanel.Resources>
		<!--Resources-->
		<!--Verschiedene Objekte im XAML ablegen und diese innerhalb des Elements, welche die Resource enthält, verfügbar machen-->
		<!--z.B. double, Brush, Converter, Styles, ...-->
		
		<!--Resources können in jedem UI Element abgelegt werden-->
		<!--Resourcen benötigen immer einen Key (außer Styles)-->
		
		<!--Resourcen können per StaticResource oder DynamicResource eingebunden werden-->
		<!--StaticResource wird einmal geladen und wird später nicht mehr aktualisiert-->
		<!--DynamicResource wird immer aktualisiert, wenn sich die Resource verändert-->
		<Button Background="{StaticResource DefaultBackgroundColor}" Content="Static"/>
		<Button Background="{DynamicResource DefaultBackground}" Content="Dynamic"/>
		<Button Content="Hintergrund verändern" Click="HintergrundAnpassen"/>

		<Slider Minimum="10"
				Maximum="40"
				Value="{Binding Path='Resources[GlobalFontSize]'}"/>
				<!--ValueChanged="Slider_ValueChanged"-->
		
		<!--Styles-->
		<!--Bestimmte Properties von Komponenten verändern, und den Style danach einfach bei mehreren Komponenten einbinden-->
		<!--Style als ausgelagertes Property-->
		<Button Content="B1">
			<Button.Style>
				<!--WICHTIG: TargetType nicht vergessen-->
				<Style TargetType="Button">
					<Setter Property="Background" Value="Black"/>
					<Setter Property="Foreground" Value="LightGreen"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="FontFamily" Value="Arial"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
				</Style>
			</Button.Style>
		</Button>
		
		<!--Allgemeiner Button Style-->
		<Button Content="B2"/>
		<Button Content="B3"/>
		<Button Content="B4"/>
		<Button Content="B5" Style="{StaticResource ButtonStyle2}"/>
		
		<!--Globalen Style überschreiben-->
		<Button Content="B6">
			<Button.Style>
				<Style TargetType="Button">
					<Setter Property="FontSize" Value="40"/>
					<Setter Property="Foreground" Value="LightGreen"/>
				</Style>
			</Button.Style>
		</Button>
		
		<!--Button, welcher den globalen Style ignoriert-->
		<Button Content="B7" Style="{x:Null}"/>

		<!--Globale Styles können auch in ResourceDictionaries abgelegt werden (siehe GlobalStyles.xaml)-->
		<TextBlock Text="Test"/>
	</StackPanel>
</Window>
